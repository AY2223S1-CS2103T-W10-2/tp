@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":InsuranceCommandParser" as InsuranceCommandParser LOGIC_COLOR
participant "r:InsuranceCommand" as InsuranceCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant "lastShownList:List" as List LOGIC_COLOR
participant "editedPerson:Person" as Person LOGIC_COLOR
participant ":EditInsuranceDescriptor" as EditInsuranceDescriptor LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("insurance 1 li/ di/")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("insurance 1 li/ di/")
activate AddressBookParser

create InsuranceCommandParser
AddressBookParser -> InsuranceCommandParser
activate InsuranceCommandParser

InsuranceCommandParser --> AddressBookParser
deactivate InsuranceCommandParser

AddressBookParser -> InsuranceCommandParser : parse("insurance 1 li/ di/")
activate InsuranceCommandParser

create EditInsuranceDescriptor
InsuranceCommandParser -> EditInsuranceDescriptor
activate EditInsuranceDescriptor

EditInsuranceDescriptor --> InsuranceCommandParser : descriptor
deactivate EditInsuranceDescriptor

create InsuranceCommand
InsuranceCommandParser -> InsuranceCommand :
activate InsuranceCommand

InsuranceCommand --> InsuranceCommandParser : r
deactivate InsuranceCommand

InsuranceCommandParser --> AddressBookParser : r
deactivate InsuranceCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
InsuranceCommandParser -[hidden]-> AddressBookParser
destroy InsuranceCommandParser

AddressBookParser --> LogicManager : r
deactivate AddressBookParser

LogicManager -> InsuranceCommand : execute()
activate InsuranceCommand

InsuranceCommand -> Model : getFilteredPersonList()
activate Model

create List
Model --> List
activate List

InsuranceCommand -> List : get(1)

List --> InsuranceCommand: personToEdit
deactivate List

InsuranceCommand --> InsuranceCommand : createEditedPerson(personToEdit, descriptor)
activate InsuranceCommand

create Person
InsuranceCommand -> Person
activate Person

Person --> InsuranceCommand : editedPerson
deactivate Person
InsuranceCommand --> InsuranceCommand: editedPerson
deactivate InsuranceCommand

InsuranceCommand -> Model : setPerson(personToEdit, editedPerson)

Model --> InsuranceCommand

InsuranceCommand -> Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)

Model --> InsuranceCommand
deactivate Model

create CommandResult
InsuranceCommand -> CommandResult
activate CommandResult

CommandResult --> InsuranceCommand
deactivate CommandResult

InsuranceCommand --> LogicManager : result
deactivate InsuranceCommand

[<--LogicManager
deactivate LogicManager
@enduml
